# Generated by Django 4.1.7 on 2023-04-06 16:11

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer', max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('profile_picture', models.ImageField(default='profile_pictures/default/tutor.jpg', null=True, upload_to=accounts.models.upload_image_path, verbose_name='User Picture')),
                ('contact', models.CharField(blank=True, max_length=50, verbose_name='contact number')),
                ('bio', models.TextField(blank=True, max_length=999999, verbose_name='bio which also houses the lessons')),
                ('active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('student', models.BooleanField(default=False, help_text='Categorizes the user as student', verbose_name='Student')),
                ('tutor', models.BooleanField(default=False, help_text='Categorizes the user as tutor', verbose_name='Tutor')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('numReviews', models.IntegerField(blank=True, null=True, verbose_name='reviews')),
                ('meeting_link', models.TextField(blank=True, null=True, verbose_name='Zoom Link')),
                ('price_rate_hour', models.DecimalField(decimal_places=0, default=0, max_digits=3, null=True, verbose_name='Hourly Price Rate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('count_in_stock', models.PositiveIntegerField(default=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=200, null=True)),
                ('paid_status', models.BooleanField(default=False)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_title', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.schedule')),
                ('schedule_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.scheduleorder')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleorder',
            name='schedules',
            field=models.ManyToManyField(through='accounts.ScheduleOrderItem', to='accounts.schedule'),
        ),
        migrations.AddField(
            model_name='scheduleorder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user_student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews_made', to=settings.AUTH_USER_MODEL)),
                ('user_tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concern', models.TextField(blank=True, max_length=300, null=True)),
                ('comment', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='users', to='accounts.subject'),
        ),
    ]
